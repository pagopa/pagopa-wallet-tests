{
	"info": {
		"_postman_id": "722762a4-a37d-4a84-b08f-086fdd583dd8",
		"name": "Wallet CARDS Migration Integration",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32950386"
	},
	"item": [
		{
			"name": "Create new wallet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"[Wallet PM Migration] New wallet created successfully with PUT /wallets/migrations\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.walletId).to.be.a(\"string\")",
							"    pm.expect(responseJson.walletIdPm).to.be.a(\"number\")",
							"    pm.expect(responseJson.walletIdPm).to.be.eq(Number(pm.environment.get(\"WALLET_ID_PM\")))",
							"    pm.expect(responseJson.contractId).to.be.a(\"string\")",
							"    pm.expect(responseJson.status).to.be.a(\"string\")",
							"    pm.environment.set('WALLET_ID', responseJson.walletId)",
							"    pm.environment.set(\"NEW_CONTRACT_ID\", responseJson.contractId)",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set('WALLET_ID_PM', Math.floor(Math.random() * 1_000_000))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{MIGRATION_API_KEY_TEST}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"walletIdPm\": {{WALLET_ID_PM}},\n    \"fiscalCode\": \"{{FISCAL_CODE}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOSTNAME}}/payment-wallet-migrations/v1/migrations/wallets",
					"host": [
						"{{HOSTNAME}}"
					],
					"path": [
						"payment-wallet-migrations",
						"v1",
						"migrations",
						"wallets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get created wallet by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"[Wallet PM migration] Get wallet migrated by id with GET /wallets/:idWallet\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.walletId).to.be.a(\"string\")",
							"    pm.expect(responseJson.userId).to.be.a(\"string\")",
							"    pm.expect(responseJson.paymentMethodId).to.be.a(\"string\")",
							"    pm.expect(responseJson.status).to.be.a(\"string\")",
							"    pm.expect(responseJson.status).to.be.eq(\"CREATED\")",
							"    pm.expect(responseJson.walletId).to.be.eq(pm.environment.get(\"WALLET_ID\"))",
							"    pm.expect(responseJson.userId).to.be.eq(pm.environment.get('USER_ID'))",
							"    pm.expect(responseJson.paymentMethodId).to.be.eq(pm.environment.get('PAYMENT_METHOD_ID'))",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{WALLET_TOKEN_TEST}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{HOSTNAME}}/payment-wallet/v1/wallets/{{WALLET_ID}}",
					"host": [
						"{{HOSTNAME}}"
					],
					"path": [
						"payment-wallet",
						"v1",
						"wallets",
						"{{WALLET_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update with card details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"[Wallet PM Migration] Update card details /wallets/migrations/updateDetails\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.walletId).to.be.a(\"string\")",
							"    pm.expect(responseJson.walletId).to.be.eq(pm.environment.get(\"WALLET_ID\"))",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{MIGRATION_CSTAR_API_KEY_TEST}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"lastFourDigits\": \"7295\",\n  \"expiryDate\": \"12/25\",\n  \"paymentCircuit\": \"MC\",\n  \"paymentGatewayCardId\": \"{{$guid}}\",\n  \"contractIdentifier\": \"{{NEW_CONTRACT_ID}}\",\n  \"newContractIdentifier\": \"{{$guid}}\",\n  \"cardBin\": \"12345678\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOSTNAME}}/payment-wallet-migrations/cstar/v1/migrations/wallets/updateDetails",
					"host": [
						"{{HOSTNAME}}"
					],
					"path": [
						"payment-wallet-migrations",
						"cstar",
						"v1",
						"migrations",
						"wallets",
						"updateDetails"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get validated wallet by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"[Wallet PM migration] Get wallet migrated by id with GET /wallets/:idWallet\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.walletId).to.be.a(\"string\")",
							"    pm.expect(responseJson.userId).to.be.a(\"string\")",
							"    pm.expect(responseJson.paymentMethodId).to.be.a(\"string\")",
							"    pm.expect(responseJson.status).to.be.a(\"string\")",
							"    pm.expect(responseJson.status).to.be.eq(\"VALIDATED\")",
							"    pm.expect(responseJson.details.type).to.be.eq(\"CARDS\")",
							"    pm.expect(responseJson.details.lastFourDigits).to.be.eq(\"7295\")",
							"    pm.expect(responseJson.details.expiryDate).to.be.eq(\"202512\")",
							"    pm.expect(responseJson.walletId).to.be.eq(pm.environment.get(\"WALLET_ID\"))",
							"    pm.expect(responseJson.userId).to.be.eq(pm.environment.get('USER_ID'))",
							"    pm.expect(responseJson.paymentMethodId).to.be.eq(pm.environment.get('PAYMENT_METHOD_ID'))",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{WALLET_TOKEN_TEST}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{HOSTNAME}}/payment-wallet/v1/wallets/{{WALLET_ID}}",
					"host": [
						"{{HOSTNAME}}"
					],
					"path": [
						"payment-wallet",
						"v1",
						"wallets",
						"{{WALLET_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete wallet by ContractId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"[Wallet PM Migration] Delete Wallet by ContractId /wallets/migrations/delete\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{MIGRATION_CSTAR_API_KEY_TEST}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"contractIdentifier\": \"{{NEW_CONTRACT_ID}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{HOSTNAME}}/payment-wallet-migrations/cstar/v1/migrations/wallets/delete",
					"host": [
						"{{HOSTNAME}}"
					],
					"path": [
						"payment-wallet-migrations",
						"cstar",
						"v1",
						"migrations",
						"wallets",
						"delete"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get deleted wallet by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"[Wallet PM migration] Get deleted wallet by migration with GET /wallets/:idWallet\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.walletId).to.be.a(\"string\")",
							"    pm.expect(responseJson.userId).to.be.a(\"string\")",
							"    pm.expect(responseJson.paymentMethodId).to.be.a(\"string\")",
							"    pm.expect(responseJson.status).to.be.a(\"string\")",
							"    pm.expect(responseJson.status).to.be.eq(\"DELETED\")",
							"    pm.expect(responseJson.details.type).to.be.eq(\"CARDS\")",
							"    pm.expect(responseJson.details.lastFourDigits).to.be.eq(\"7295\")",
							"    pm.expect(responseJson.details.expiryDate).to.be.eq(\"202512\")",
							"    pm.expect(responseJson.walletId).to.be.eq(pm.environment.get(\"WALLET_ID\"))",
							"    pm.expect(responseJson.userId).to.be.eq(pm.environment.get('USER_ID'))",
							"    pm.expect(responseJson.paymentMethodId).to.be.eq(pm.environment.get('PAYMENT_METHOD_ID'))",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{WALLET_TOKEN_TEST}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{HOSTNAME}}/payment-wallet/v1/wallets/{{WALLET_ID}}",
					"host": [
						"{{HOSTNAME}}"
					],
					"path": [
						"payment-wallet",
						"v1",
						"wallets",
						"{{WALLET_ID}}"
					]
				}
			},
			"response": []
		}
	]
}