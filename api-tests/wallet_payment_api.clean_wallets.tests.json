{
	"info": {
		"_postman_id": "6a6eb09c-f676-40d2-b189-d79e875bfb19",
		"name": "pagoPA Payment Wallet API - Clean Wallet",
		"description": "API to handle payment wallets PagoPA for App IO, where a wallet is triple between user identifier, payment instrument and services (i.e pagoPA, bpd).\n\nThe wallet onboarding outcome and walletId are returned as query params to the app IO, for example \n/wallets/{walletId}/outcomes?outcome=0&walletId=123. The possible outcome are:\n- SUCCESS(0)\n- GENERIC_ERROR(1)\n- AUTH_ERROR(2)\n- TIMEOUT(4)\n- CANCELED_BY_USER(8)\n- INVALID_SESSION(14)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23305473",
		"_collection_link": "https://solar-shuttle-72092.postman.co/workspace/Wallet~1247c858-5774-4bb2-b6e4-a5d7c22704e0/collection/23305473-6a6eb09c-f676-40d2-b189-d79e875bfb19?action=share&source=collection_link&creator=23305473"
	},
	"item": [
		{
			"name": "Clean all wallets retrieved by get wallet by user identifier",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"[Wallet for onboarding - CARDS] Wallet retrieved successfully by it's user id with GET /wallets\", function () {",
							"    pm.response.to.have.status(200);",
							"    var wallets = pm.response.json().wallets;",
							"    console.log(\"Found \" + wallets.length + \" wallet\")",
							"    pm.expect(wallets.length).to.be.greaterThan(0);",
							"    wallets.forEach(w => {",
							"        const deleteWalletRequest = {",
							"        url: pm.environment.get(\"ENV\") + pm.environment.get(\"SERVICE\") + \"/wallets/\" + w.walletId,",
							"        method: 'DELETE',",
							"        header: {",
							"            'Content-Type': 'application/json',",
							"            'Authorization': `Bearer ${pm.environment.get(\"SHARED_SESSION_TOKEN\")}`",
							"        }",
							"        };",
							"        console.log(\"Deleting walletId \" + w.walletId)",
							"        pm.sendRequest(deleteWalletRequest, (error, response) => {",
							"        if (error) {",
							"            throw error;",
							"        } else {",
							"            pm.expect(response.code).to.be.equals(204)",
							"            console.log(\"Deleted wallet with walletId \" + w.walletId)",
							"        }",
							"        });",
							"",
							"    })",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const createSessionRequestObject = {",
							"  url: pm.environment.get(\"ENV\") + \"/session-wallet/v1/session\",",
							"  method: 'POST',",
							"  header: {",
							"    'Content-Type': 'application/json',",
							"    'Authorization': `Bearer ${pm.environment.get(\"WALLET_TOKEN_TEST\")}`",
							"  }",
							"};",
							"",
							"pm.sendRequest(createSessionRequestObject, (error, response) => {",
							"  if (error) {",
							"    throw error;",
							"  } else {",
							"    const responseJson = response.json();",
							"    pm.environment.set(\"SHARED_SESSION_TOKEN\", responseJson.token);",
							"  }",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{SHARED_SESSION_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "x-user-id",
						"value": "{{x-user-id}}"
					}
				],
				"url": {
					"raw": "{{ENV}}{{SERVICE}}/wallets",
					"host": [
						"{{ENV}}{{SERVICE}}"
					],
					"path": [
						"wallets"
					]
				},
				"description": "Returns a of wallets related to user"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://${{hostname}}"
		}
	]
}